version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 2g

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
  nestjs:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: nestjs-app
    restart: always
    depends_on:
      - redis
      - mongodb
      - elasticsearch
      - rabbitmq
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_NAME=ORDER_QUEUE
      - MONGO_URI=mongodb://root:example@mongodb:27017
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
    ports:
      - "3000:3000"
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: consumer
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - mongodb
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_NAME=ORDER_QUEUE
      - MONGO_URI=mongodb://root:example@mongodb:27017
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
    command: ["node", "consumer.js"]

volumes:
  mongodb_data:
